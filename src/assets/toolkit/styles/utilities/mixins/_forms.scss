////
/// Forms Mixins
////

@mixin checkbox-radio-inputs {
  input[type="checkbox"],
  input[type="radio"] {
    opacity: 0;
    position: absolute;

    & + label {
      cursor: pointer;
      padding: rem-calc(4) 0;
    }

    &:checked + label::before {
      background-color: color(primary);
    }

    &:disabled + label {
      opacity: 0.5;

      &, &::before {
        cursor: $input-cursor-disabled;
      }

      &::before {
        background-color: $input-background-disabled;
        box-shadow: 0 0 0 1px $input-background-disabled;
      }
    }
  }

  input[type="checkbox"] {
    &:checked + label::before {
      background-image: url('../images/check-thick-white.png');
      background-image: url('../images/check-thick-white.svg');
      background-position: 50%;
      background-repeat: no-repeat;
      background-size: 80%;
    }

    &:focus + label::before {
      box-shadow: 0 0 0 1px color(white), 0 0 3px 4px color(primary);
    }
  }

  input[type="radio"]:focus + label::before {
    box-shadow: 0 0 0 2px color(white), 0 0 0 3px color(primary), 0 0 3px 4px $input-color-focus, 0 0 7px 4px $input-color-focus;
  }
}

@mixin form-element {
  $height: rem-calc(45);

  display: block;
  height: $height;
  margin: 0 0 $form-spacing;
  padding: $input-padding;
  width: 100%;

  border: $input-border;
  border-radius: $input-radius;
  background-color: $input-background;

  font-family: $base-font-family;
  font-size: $input-font-size;
  // font-weight: $input-font-weight;
  line-height: $input-line-height;
  color: $input-color;

  @if has-value($input-transition) {
    transition: $input-transition;
  }

  // Focus state
  &:focus {
    outline: none;
    border: $input-border-focus;
    background-color: $input-background-focus;
    box-shadow: $input-shadow-focus;

    @if has-value($input-transition) {
      transition: $input-transition;
    }
  }
}

@mixin form-inputs {
  // Text inputs
  #{text-inputs()},
  textarea {
    @include form-element;
    appearance: none;

    &.large {
      padding: $input-padding-lg;
      height: auto;
    }
  }

  // Text areas
  textarea {
    max-width: 100%;

    &[rows] {
      height: auto;
    }
  }

  input,
  textarea {
    // Placeholder text
    &::placeholder {
      color: $input-placeholder-color;
    }

    // Disabled/readonly state
    &:disabled,
    &[readonly] {
      background-color: $input-background-disabled;
      cursor: $input-cursor-disabled;

      &::placeholder {
        color: $input-color;
      }
    }
  }

  label {
    display: block;
    margin-bottom: $input-margin;
  }
}

@mixin form-select {
  appearance: none;
  background-color: $input-background;
  background-image: url('../images/arrow-down.png');
  background-image: url('../images/arrow-down.svg');
  background-position: right 1.5rem center;
  background-repeat: no-repeat;
  background-size: 1.4rem;
  color: $input-color;
  font-family: $base-font-family;
  font-size: $input-font-size;
  height: 4.5rem;
  margin: 0 0 $form-spacing;
  padding: $input-padding;
  padding-right: $input-padding * 3.5;
  width: 100%;

  &:disabled {
    opacity: 0.5;
    background-color: $input-background-disabled;
    cursor: $input-cursor-disabled;
  }

  // Hide the dropdown arrow shown in newer IE versions
  &::-ms-expand {
    display: none;
  }

  &[multiple] {
    height: auto;
    background-image: none;
    padding: $input-font-size * 1.25 $input-font-size * 1.25 0;
  }
}

@mixin -styled-label-interface($size, $radius, $box-shadow) {
  label {
    &::before {
      content: "";
      background-color: $checkbox-background;
      box-shadow: $box-shadow;
      border-radius: $radius;
      display: inline-block;
      margin-right: rem-calc(8);
      vertical-align: bottom;

      height: $size;
      width: $size;
    }
  }
}

@mixin cornerstone-checkbox(
    $size: $checkbox-size,
    $radius: $checkbox-radius,
    $box-shadow: $checkbox-box-shadow
  ) {
  @include -styled-label-interface($size, $radius, $box-shadow);
}

@mixin cornerstone-radio(
    $size: $checkbox-size,
    $radius: 50%,
    $box-shadow: $radio-box-shadow
  ) {
  @include -styled-label-interface($size, $radius, $box-shadow);
}

@mixin cornerstone-forms {
  @include checkbox-radio-inputs;
  @include form-inputs;
}
